{"ast":null,"code":"var _jsxFileName = \"/Users/brandonmanuel/PersonalProjects/recipository/src/components/Step/Step.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { Button, FloatingLabel, Form } from 'react-bootstrap';\nimport 'bootstrap-icons/font/bootstrap-icons.css';\nimport './Step.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Step({\n  step\n}) {\n  _s();\n  const [isEditable, setIsEditable] = useState(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"step\",\n      children: [isEditable ? /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: `step-${step.id}`,\n        children: /*#__PURE__*/_jsxDEV(FloatingLabel, {\n          controlId: \"floatingInput\",\n          label: \"Add detailed step instructions\",\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"textarea\",\n            placeholder: \"Add detailed step instructions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this) : step.text, /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outline-secondary\",\n        onClick: () => setIsEditable(isEditable => !isEditable),\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"bi bi-pencil-square\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), \";\"]\n  }, void 0, true);\n}\n_s(Step, \"XR8qrCeMXdvZ6hXvpL0FK6Kbqdw=\");\n_c = Step;\nexport default Step;\nvar _c;\n$RefreshReg$(_c, \"Step\");","map":{"version":3,"names":["useState","Button","FloatingLabel","Form","jsxDEV","_jsxDEV","Fragment","_Fragment","Step","step","_s","isEditable","setIsEditable","children","className","Group","controlId","id","label","Control","type","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","text","variant","onClick","_c","$RefreshReg$"],"sources":["/Users/brandonmanuel/PersonalProjects/recipository/src/components/Step/Step.js"],"sourcesContent":["import { useState } from 'react';\n\nimport { Button, FloatingLabel, Form } from 'react-bootstrap';\n\nimport 'bootstrap-icons/font/bootstrap-icons.css';\nimport './Step.css';\n\nfunction Step({ step }) {\n  const [isEditable, setIsEditable] = useState(false);\n\n  return (\n    <>\n      <div className=\"step\">\n        {isEditable ? (\n          <Form.Group className=\"mb-3\" controlId={`step-${step.id}`}>\n            <FloatingLabel\n              controlId=\"floatingInput\"\n              label=\"Add detailed step instructions\"\n              className=\"mb-3\"\n            >\n              <Form.Control\n                type=\"textarea\"\n                placeholder=\"Add detailed step instructions\"\n              />\n            </FloatingLabel>\n          </Form.Group>\n        ) : (\n          step.text\n        )}\n        <Button\n          variant=\"outline-secondary\"\n          onClick={() => setIsEditable((isEditable) => !isEditable)}\n        >\n          <i className=\"bi bi-pencil-square\" />\n        </Button>\n      </div>\n      ;\n    </>\n  );\n}\n\nexport default Step;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,SAASC,MAAM,EAAEC,aAAa,EAAEC,IAAI,QAAQ,iBAAiB;AAE7D,OAAO,0CAA0C;AACjD,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEpB,SAASC,IAAIA,CAAC;EAAEC;AAAK,CAAC,EAAE;EAAAC,EAAA;EACtB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAEnD,oBACEK,OAAA,CAAAE,SAAA;IAAAM,QAAA,gBACER,OAAA;MAAKS,SAAS,EAAC,MAAM;MAAAD,QAAA,GAClBF,UAAU,gBACTN,OAAA,CAACF,IAAI,CAACY,KAAK;QAACD,SAAS,EAAC,MAAM;QAACE,SAAS,EAAG,QAAOP,IAAI,CAACQ,EAAG,EAAE;QAAAJ,QAAA,eACxDR,OAAA,CAACH,aAAa;UACZc,SAAS,EAAC,eAAe;UACzBE,KAAK,EAAC,gCAAgC;UACtCJ,SAAS,EAAC,MAAM;UAAAD,QAAA,eAEhBR,OAAA,CAACF,IAAI,CAACgB,OAAO;YACXC,IAAI,EAAC,UAAU;YACfC,WAAW,EAAC;UAAgC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7C;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACW;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,GAEbhB,IAAI,CAACiB,IACN,eACDrB,OAAA,CAACJ,MAAM;QACL0B,OAAO,EAAC,mBAAmB;QAC3BC,OAAO,EAAEA,CAAA,KAAMhB,aAAa,CAAED,UAAU,IAAK,CAACA,UAAU,CAAE;QAAAE,QAAA,eAE1DR,OAAA;UAAGS,SAAS,EAAC;QAAqB;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,KAER;EAAA,eAAE,CAAC;AAEP;AAACf,EAAA,CAhCQF,IAAI;AAAAqB,EAAA,GAAJrB,IAAI;AAkCb,eAAeA,IAAI;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}