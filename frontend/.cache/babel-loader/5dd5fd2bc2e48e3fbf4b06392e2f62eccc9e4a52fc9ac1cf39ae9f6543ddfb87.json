{"ast":null,"code":"var _jsxFileName = \"/Users/brandonmanuel/PersonalProjects/recipository/src/pages/Recipe/Recipe.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Ingredient from '../Ingredient/Ingredient';\nimport './Recipe.css';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Recipe() {\n  _s();\n  const [recipeName, setRecipeName] = useState(null);\n  const [ingredients, setIngredients] = useState([]);\n  let {\n    recipeID\n  } = useParams();\n  useEffect(() => {\n    var json = '';\n    try {\n      json = require(`../../../data/recipes/${recipeID}.json`);\n    } catch (e) {\n      console.error(`could not find recipe ${recipeID}`);\n    }\n    if (json == null) {\n      return;\n    }\n    setRecipeName(json.name);\n    const intermediateIngredients = [];\n    json.ingredients.forEach(ingredient => {\n      var ingredientJSON = require(`../../../data/ingredients/${ingredient.id}.json`);\n      intermediateIngredients.push(ingredientJSON);\n    });\n    setIngredients(() => intermediateIngredients);\n  }, [recipeID]);\n  if (recipeName === '') {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"Recipe: Not Found\"\n    }, void 0, false);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recipe\",\n      children: [\"Recipe: \", recipeName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ingredients\",\n      children: [\"Ingredients:\", ingredients.map(ingredient => {\n        return /*#__PURE__*/_jsxDEV(Ingredient, {\n          ingredient: ingredient\n        }, ingredient.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 18\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Recipe, \"AjMxqkgmX3lu/tmGrw6hpEclDuY=\", false, function () {\n  return [useParams];\n});\n_c = Recipe;\nexport default Recipe;\nvar _c;\n$RefreshReg$(_c, \"Recipe\");","map":{"version":3,"names":["useEffect","useState","useParams","Ingredient","Fragment","_Fragment","jsxDEV","_jsxDEV","Recipe","_s","recipeName","setRecipeName","ingredients","setIngredients","recipeID","json","require","e","console","error","name","intermediateIngredients","forEach","ingredient","ingredientJSON","id","push","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","_c","$RefreshReg$"],"sources":["/Users/brandonmanuel/PersonalProjects/recipository/src/pages/Recipe/Recipe.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport Ingredient from '../Ingredient/Ingredient';\n\nimport './Recipe.css';\n\nfunction Recipe() {\n  const [recipeName, setRecipeName] = useState(null);\n  const [ingredients, setIngredients] = useState([]);\n\n  let { recipeID } = useParams();\n\n  useEffect(() => {\n    var json = '';\n    try {\n      json = require(`../../../data/recipes/${recipeID}.json`);\n    } catch (e) {\n      console.error(`could not find recipe ${recipeID}`);\n    }\n\n    if (json == null) {\n      return;\n    }\n\n    setRecipeName(json.name);\n\n    const intermediateIngredients = [];\n    json.ingredients.forEach((ingredient) => {\n      var ingredientJSON = require(`../../../data/ingredients/${ingredient.id}.json`);\n      intermediateIngredients.push(ingredientJSON);\n    });\n\n    setIngredients(() => intermediateIngredients);\n  }, [recipeID]);\n\n  if (recipeName === '') {\n    return <>Recipe: Not Found</>;\n  }\n\n  return (\n    <>\n      <div className=\"recipe\">Recipe: {recipeName}</div>\n      <div className=\"ingredients\">\n        Ingredients:\n        {ingredients.map((ingredient) => {\n          return <Ingredient key={ingredient.id} ingredient={ingredient} />;\n        })}\n      </div>\n    </>\n  );\n}\n\nexport default Recipe;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,SAAS,QAAQ,kBAAkB;AAE5C,OAAOC,UAAU,MAAM,0BAA0B;AAEjD,OAAO,cAAc;AAAC,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtB,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAElD,IAAI;IAAEa;EAAS,CAAC,GAAGZ,SAAS,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACd,IAAIe,IAAI,GAAG,EAAE;IACb,IAAI;MACFA,IAAI,GAAGC,OAAO,CAAE,yBAAwBF,QAAS,OAAM,CAAC;IAC1D,CAAC,CAAC,OAAOG,CAAC,EAAE;MACVC,OAAO,CAACC,KAAK,CAAE,yBAAwBL,QAAS,EAAC,CAAC;IACpD;IAEA,IAAIC,IAAI,IAAI,IAAI,EAAE;MAChB;IACF;IAEAJ,aAAa,CAACI,IAAI,CAACK,IAAI,CAAC;IAExB,MAAMC,uBAAuB,GAAG,EAAE;IAClCN,IAAI,CAACH,WAAW,CAACU,OAAO,CAAEC,UAAU,IAAK;MACvC,IAAIC,cAAc,GAAGR,OAAO,CAAE,6BAA4BO,UAAU,CAACE,EAAG,OAAM,CAAC;MAC/EJ,uBAAuB,CAACK,IAAI,CAACF,cAAc,CAAC;IAC9C,CAAC,CAAC;IAEFX,cAAc,CAAC,MAAMQ,uBAAuB,CAAC;EAC/C,CAAC,EAAE,CAACP,QAAQ,CAAC,CAAC;EAEd,IAAIJ,UAAU,KAAK,EAAE,EAAE;IACrB,oBAAOH,OAAA,CAAAF,SAAA;MAAAsB,QAAA,EAAE;IAAiB,gBAAE,CAAC;EAC/B;EAEA,oBACEpB,OAAA,CAAAF,SAAA;IAAAsB,QAAA,gBACEpB,OAAA;MAAKqB,SAAS,EAAC,QAAQ;MAAAD,QAAA,GAAC,UAAQ,EAACjB,UAAU;IAAA;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAClDzB,OAAA;MAAKqB,SAAS,EAAC,aAAa;MAAAD,QAAA,GAAC,cAE3B,EAACf,WAAW,CAACqB,GAAG,CAAEV,UAAU,IAAK;QAC/B,oBAAOhB,OAAA,CAACJ,UAAU;UAAqBoB,UAAU,EAAEA;QAAW,GAAtCA,UAAU,CAACE,EAAE;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAA2B,CAAC;MACnE,CAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA,eACN,CAAC;AAEP;AAACvB,EAAA,CA5CQD,MAAM;EAAA,QAIMN,SAAS;AAAA;AAAAgC,EAAA,GAJrB1B,MAAM;AA8Cf,eAAeA,MAAM;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}