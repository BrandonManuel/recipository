{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useParams } from 'react-router-dom';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Recipe() {\n  _s();\n  let {\n    recipeID\n  } = useParams();\n  try {\n    var recipe = require(`../../../data/recipes/${recipeID}.json`);\n  } catch (e) {\n    console.log(e);\n  }\n  if (recipe == null) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"Not found\"\n    }, void 0, false);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\"Recipe: \", recipe.name]\n  }, void 0, true);\n}\n_s(Recipe, \"Pn+DZBj+m+s6VK/5wEfccnmdg2o=\", false, function () {\n  return [useParams];\n});\n_c = Recipe;\nexport default Recipe;\nvar _c;\n$RefreshReg$(_c, \"Recipe\");","map":{"version":3,"names":["useParams","Fragment","_Fragment","jsxDEV","_jsxDEV","Recipe","_s","recipeID","recipe","require","e","console","log","children","name","_c","$RefreshReg$"],"sources":["/Users/brandonmanuel/PersonalProjects/recipository/src/pages/Recipe/Recipe.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\n\nfunction Recipe() {\n  let { recipeID } = useParams();\n\n  try {\n    var recipe = require(`../../../data/recipes/${recipeID}.json`);\n  } catch (e) {\n    console.log(e);\n  }\n\n  if (recipe == null) {\n    return <>Not found</>;\n  }\n\n  return <>Recipe: {recipe.name}</>;\n}\n\nexport default Recipe;\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7C,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAChB,IAAI;IAAEC;EAAS,CAAC,GAAGP,SAAS,CAAC,CAAC;EAE9B,IAAI;IACF,IAAIQ,MAAM,GAAGC,OAAO,CAAE,yBAAwBF,QAAS,OAAM,CAAC;EAChE,CAAC,CAAC,OAAOG,CAAC,EAAE;IACVC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;EAChB;EAEA,IAAIF,MAAM,IAAI,IAAI,EAAE;IAClB,oBAAOJ,OAAA,CAAAF,SAAA;MAAAW,QAAA,EAAE;IAAS,gBAAE,CAAC;EACvB;EAEA,oBAAOT,OAAA,CAAAF,SAAA;IAAAW,QAAA,GAAE,UAAQ,EAACL,MAAM,CAACM,IAAI;EAAA,eAAG,CAAC;AACnC;AAACR,EAAA,CAdQD,MAAM;EAAA,QACML,SAAS;AAAA;AAAAe,EAAA,GADrBV,MAAM;AAgBf,eAAeA,MAAM;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}