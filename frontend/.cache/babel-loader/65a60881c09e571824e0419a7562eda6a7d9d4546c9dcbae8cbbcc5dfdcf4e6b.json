{"ast":null,"code":"var _jsxFileName = \"/Users/brandonmanuel/PersonalProjects/recipository/src/pages/Recipe/Recipe.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Ingredient from '../Ingredient/Ingredient';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Recipe() {\n  _s();\n  const [recipeJSON, setRecipeJSON] = useState(null);\n  const [recipe, setRecipe] = useState('');\n  const [ingredients, setIngredients] = useState([]);\n  let {\n    recipeID\n  } = useParams();\n  useEffect(() => {\n    try {\n      recipeJSON = require(`../../../data/recipes/${recipeID}.json`);\n      setRecipeJSON(recipeJSON);\n    } catch (e) {\n      setRecipeJSON(null);\n    }\n  }, [recipeID]);\n  useEffect(() => {\n    if (recipeJSON == null) {\n      return;\n    }\n    console.log('ingredients are here:');\n    console.log(recipeJSON.ingredients);\n    recipeJSON.ingredients.forEach(ingredient => {\n      var ingredientJSON = require(`../../../data/ingredients/${ingredient.id}.json`);\n      setIngredients(ingredients => {\n        console.log('Pushing: ');\n        console.log(ingredientJSON);\n        console.log('\\n\\n');\n        ingredients.push(ingredientJSON);\n        console.log(ingredients);\n        return ingredients;\n      });\n    });\n  }, [recipeJSON]);\n  setRecipe(recipeJSON);\n  if (recipeJSON == null) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"Recipe: Not Found\"\n    }, void 0, false);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"recipe\",\n    children: [\"Recipe: \", recipe.name, \"Ingredients:\", ingredients.forEach(ingredient => /*#__PURE__*/_jsxDEV(Ingredient, {\n      ingredient: ingredient\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(Recipe, \"jXCEuIFj+STOX41GWXVpzq4mgy4=\", false, function () {\n  return [useParams];\n});\n_c = Recipe;\nexport default Recipe;\nvar _c;\n$RefreshReg$(_c, \"Recipe\");","map":{"version":3,"names":["useEffect","useState","useParams","Ingredient","Fragment","_Fragment","jsxDEV","_jsxDEV","Recipe","_s","recipeJSON","setRecipeJSON","recipe","setRecipe","ingredients","setIngredients","recipeID","require","e","console","log","forEach","ingredient","ingredientJSON","id","push","children","className","name","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/brandonmanuel/PersonalProjects/recipository/src/pages/Recipe/Recipe.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Ingredient from '../Ingredient/Ingredient';\n\nfunction Recipe() {\n  const [recipeJSON, setRecipeJSON] = useState(null);\n  const [recipe, setRecipe] = useState('');\n  const [ingredients, setIngredients] = useState([]);\n\n  let { recipeID } = useParams();\n\n  useEffect(() => {\n    try {\n      recipeJSON = require(`../../../data/recipes/${recipeID}.json`);\n      setRecipeJSON(recipeJSON);\n    } catch (e) {\n      setRecipeJSON(null);\n    }\n  }, [recipeID]);\n\n  useEffect(() => {\n    if (recipeJSON == null) {\n      return;\n    }\n\n    console.log('ingredients are here:');\n    console.log(recipeJSON.ingredients);\n    recipeJSON.ingredients.forEach((ingredient) => {\n      var ingredientJSON = require(`../../../data/ingredients/${ingredient.id}.json`);\n\n      setIngredients((ingredients) => {\n        console.log('Pushing: ');\n        console.log(ingredientJSON);\n        console.log('\\n\\n');\n        ingredients.push(ingredientJSON);\n        console.log(ingredients);\n        return ingredients;\n      });\n    });\n  }, [recipeJSON]);\n\n  setRecipe(recipeJSON);\n\n  if (recipeJSON == null) {\n    return <>Recipe: Not Found</>;\n  }\n\n  return (\n    <div className=\"recipe\">\n      Recipe: {recipe.name}\n      Ingredients:\n      {ingredients.forEach((ingredient) => (\n        <Ingredient ingredient={ingredient}></Ingredient>\n      ))}\n    </div>\n  );\n}\n\nexport default Recipe;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElD,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACW,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACa,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAElD,IAAI;IAAEe;EAAS,CAAC,GAAGd,SAAS,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACd,IAAI;MACFU,UAAU,GAAGO,OAAO,CAAE,yBAAwBD,QAAS,OAAM,CAAC;MAC9DL,aAAa,CAACD,UAAU,CAAC;IAC3B,CAAC,CAAC,OAAOQ,CAAC,EAAE;MACVP,aAAa,CAAC,IAAI,CAAC;IACrB;EACF,CAAC,EAAE,CAACK,QAAQ,CAAC,CAAC;EAEdhB,SAAS,CAAC,MAAM;IACd,IAAIU,UAAU,IAAI,IAAI,EAAE;MACtB;IACF;IAEAS,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;IACpCD,OAAO,CAACC,GAAG,CAACV,UAAU,CAACI,WAAW,CAAC;IACnCJ,UAAU,CAACI,WAAW,CAACO,OAAO,CAAEC,UAAU,IAAK;MAC7C,IAAIC,cAAc,GAAGN,OAAO,CAAE,6BAA4BK,UAAU,CAACE,EAAG,OAAM,CAAC;MAE/ET,cAAc,CAAED,WAAW,IAAK;QAC9BK,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;QACxBD,OAAO,CAACC,GAAG,CAACG,cAAc,CAAC;QAC3BJ,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;QACnBN,WAAW,CAACW,IAAI,CAACF,cAAc,CAAC;QAChCJ,OAAO,CAACC,GAAG,CAACN,WAAW,CAAC;QACxB,OAAOA,WAAW;MACpB,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC,EAAE,CAACJ,UAAU,CAAC,CAAC;EAEhBG,SAAS,CAACH,UAAU,CAAC;EAErB,IAAIA,UAAU,IAAI,IAAI,EAAE;IACtB,oBAAOH,OAAA,CAAAF,SAAA;MAAAqB,QAAA,EAAE;IAAiB,gBAAE,CAAC;EAC/B;EAEA,oBACEnB,OAAA;IAAKoB,SAAS,EAAC,QAAQ;IAAAD,QAAA,GAAC,UACd,EAACd,MAAM,CAACgB,IAAI,EAAC,cAErB,EAACd,WAAW,CAACO,OAAO,CAAEC,UAAU,iBAC9Bf,OAAA,CAACJ,UAAU;MAACmB,UAAU,EAAEA;IAAW;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAa,CACjD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACvB,EAAA,CApDQD,MAAM;EAAA,QAKMN,SAAS;AAAA;AAAA+B,EAAA,GALrBzB,MAAM;AAsDf,eAAeA,MAAM;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}